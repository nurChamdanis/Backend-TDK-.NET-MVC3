DECLARE @@info VARCHAR(MAX);
DECLARE @@result int;
DECLARE @@messages VARCHAR(MAX);

DECLARE @@NOREG VARCHAR(MAX) = @P_NOREG; 

DECLARE @@TRANSACTION_ID VARCHAR(MAX) = @P_TRANSACTION_ID;

--
DECLARE @@CLASS VARCHAR(MAX) = @P_CLASS ;
DECLARE @@ID_POSITION_LEVEL VARCHAR(MAX); 
DECLARE @@POSITION_LEVEL VARCHAR(MAX) = @P_POSITION_LEVEL;  
DECLARE @@POSITION_ABBR VARCHAR(MAX) = @P_POSITION_ABBR ;
DECLARE @@DIRECTORATE_ID VARCHAR(MAX) = @P_DIRECTORATE_ID;
DECLARE @@DIRECTORATE_NAME VARCHAR(MAX) = @P_DIRECTORATE_NAME;
DECLARE @@DIVISION_ID VARCHAR(MAX) = @P_DIVISION_ID;
DECLARE @@DIVISION_NAME VARCHAR(MAX) = @P_DIVISION_NAME;
DECLARE @@DEPARTMENT_ID VARCHAR(MAX) = @P_DEPARTMENT_ID;
DECLARE @@DEPARTMENT_NAME VARCHAR(MAX) = @P_DEPARTMENT_NAME;
DECLARE @@SECTION_ID VARCHAR(MAX) = @P_SECTION_ID;
DECLARE @@SECTION_NAME VARCHAR(MAX) = @P_SECTION_NAME;
DECLARE @@LINE_ID VARCHAR(MAX) = @P_LINE_ID;
DECLARE @@LINE_NAME VARCHAR(MAX) = @P_LINE_NAME;
DECLARE @@GROUP_ID VARCHAR(MAX) = @P_GROUP_ID;
DECLARE @@GROUP_NAME VARCHAR(MAX) = @P_GROUP_NAME;
DECLARE @@RESPONSIBILITY VARCHAR(MAX) = @P_RESPONSIBILITY;
DECLARE @@ACCOMPLISHMENT VARCHAR(MAX) = @P_ACCOMPLISHMENT;
DECLARE @@VALID_FROM VARCHAR(MAX) = @P_VALID_FROM;
DECLARE @@VALID_TO VARCHAR(MAX) = @P_VALID_TO
DECLARE @@ORG_ID VARCHAR(MAX) = @P_ORG_ID;
DECLARE @@POSITION_PERCENT VARCHAR(MAX) = @P_POSITION_PERCENT;
DECLARE @@STATUS_CD VARCHAR(MAX) ;
DECLARE @@REMARK_1  VARCHAR(MAX) ;
DECLARE @@REMARK_2  VARCHAR(MAX) ;
DECLARE @@REJECT_REASON VARCHAR(MAX) = NULL;

--
DECLARE @@CANCEL_FLAG VARCHAR(MAX) = NULL;
DECLARE @@CANCEL_BY VARCHAR(MAX) = NULL;
DECLARE @@CANCEL_DATE VARCHAR(MAX) = NULL;
DECLARE @@UPDATED_DT VARCHAR(MAX) = CURRENT_TIMESTAMP;
DECLARE @@UPDATED_BY VARCHAR(MAX) = @@NOREG;

 
DECLARE @@COUNT_MAP_RESULT_ONLY_HR INT;
DECLARE @@COUNT_MAP_RESULT_ALL INT; 
 
DECLARE @@APP_SH_NOREG VARCHAR(MAX);
DECLARE @@APP_SH_STATUS VARCHAR(MAX);
DECLARE @@APP_SH_DATE VARCHAR(MAX);
DECLARE @@APP_DPH_NOREG VARCHAR(MAX);
DECLARE @@APP_DPH_STATUS VARCHAR(MAX);
DECLARE @@APP_DPH_DATE VARCHAR(MAX);
DECLARE @@APP_DH_NOREG VARCHAR(MAX);
DECLARE @@APP_DH_STATUS VARCHAR(MAX);
DECLARE @@APP_DH_DATE VARCHAR(MAX);
DECLARE @@APP_DIR_NOREG VARCHAR(MAX);
DECLARE @@APP_DIR_STATUS VARCHAR(MAX);
DECLARE @@APP_DIR_DATE VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_NOREG VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_STATUS VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_DATE VARCHAR(MAX); 
DECLARE @@CREATED_BY VARCHAR(MAX) = @@NOREG;
DECLARE @@CREATED_DT VARCHAR(MAX) = CURRENT_TIMESTAMP;

DECLARE @@MAX_TRANSACTION_ID VARCHAR(MAX);
 
DECLARE @@APPROVER_1 VARCHAR(MAX);
DECLARE @@APPROVER_2 VARCHAR(MAX);
DECLARE @@APPROVER_3 VARCHAR(MAX);
DECLARE @@APPROVER_4 VARCHAR(MAX);

DECLARE @@CODE_TYPE VARCHAR(MAX) = 'RH';



DECLARE @@APPROVAL VARCHAR(MAX);
DECLARE @@COUNT_MATCH INT;




BEGIN TRY
	BEGIN  
		
		IF @@TRANSACTION_ID IS NOT NULL BEGIN
			-- CHANGE STATUS FLAG CANCEL TRUE (1)
			UPDATE 
				PDI.TB_R_SUBMISSION_ROTATION_HISTORY
				SET 
				CANCEL_FLAG = 1
				, CANCEL_BY = @@CREATED_BY
				, CANCEL_DATE = @@CREATED_DT
				, UPDATED_DT = @@UPDATED_DT
				, UPDATED_BY = @@UPDATED_BY  
			WHERE TRANSACTION_ID=''+@@TRANSACTION_ID+'' ;
		END 

		SET @@STATUS_CD = (SELECT STATUS_CD FROM DBO.TB_M_APPROVAL_STATUS WHERE STATUS_DESC = 'DIAJUKAN');

		SELECT @@ID_POSITION_LEVEL = B.POSITION_LEVEL 
		FROM DBO.TB_M_PROFILE_HEADER A 
		JOIN TB_M_ORG_POSITION B ON A.POSITION = B.POSITION_DESC  
		WHERE NOREG = @@NOREG;

		SELECT @@COUNT_MAP_RESULT_ONLY_HR = COUNT(*) 
		FROM PDI.TB_M_MAPPING_APPROVAL 
		WHERE cast(POSITION_LEVEL AS INT) = @@ID_POSITION_LEVEL 
			AND APPROVER_1 IS NOT NULL AND APPROVER_2 IS NULL 
			AND APPROVER_3 IS NULL AND APPROVER_4 IS NULL;

		SELECT @@COUNT_MAP_RESULT_ALL = COUNT(*) 
		FROM PDI.TB_M_MAPPING_APPROVAL 
		WHERE POSITION_LEVEL = @@ID_POSITION_LEVEL 
			AND APPROVER_1 IS NOT NULL   
			AND APPROVER_2 IS NOT NULL  
			AND APPROVER_3 IS NOT NULL  
			AND APPROVER_4 IS NULL; 

		SET @@APPROVAL = (
				SELECT SYSTEM_VALUE
				from DBO.TB_M_SYSTEM
				WHERE 
				FUNCTION_ID = 'ENVIRONMENT_PDI' 
				AND SYSTEM_CD = 'APPROVAL'		
			);
				--
		IF @@COUNT_MAP_RESULT_ONLY_HR = 1
		BEGIN 	
			SET @@info = 'SUCCESS';
			SET @@result = 200;
			SET @@messages = 'success'; 
		END 

		--
		ELSE
		BEGIN 
			SET @@MAX_TRANSACTION_ID = (SELECT MAX(TRANSACTION_ID) TRANSACTION_ID FROM PDI.TB_R_SUBMISSION_ROTATION_HISTORY
				WHERE TRANSACTION_ID LIKE CONCAT(@@CODE_TYPE, FORMAT(GETDATE(), 'ddMMyy'), '%')  );

			SELECT 
				@@APPROVER_1 = APPROVER_1,
				@@APPROVER_2 = APPROVER_2,
				@@APPROVER_3 = APPROVER_3,
				@@APPROVER_4 = APPROVER_4
			FROM PDI.TB_M_MAPPING_APPROVAL 
			WHERE POSITION_LEVEL = @@ID_POSITION_LEVEL 
				AND APPROVER_1 IS NOT NULL   
				AND APPROVER_2 IS NOT NULL  
				AND APPROVER_3 IS NOT NULL  
				AND APPROVER_4 IS NULL;

			/*
			EXEC [PDI].[sp_extract_transactionid] @@MAX_TRANSACTION_ID, @@CODE_TYPE;   
			SET @@TRANSACTION_ID = (SELECT CONCAT(V_TYPE, V_DATE, V_SEQ) FROM ##RESULT_TEMP_EXSTRACT_TRANSACTION);  
			EXEC [PDI].[sp_GetSuperiors_NEW] @@NOREG;
			*/
			
			SET @@TRANSACTION_ID = (SELECT CONCAT(REQ.V_TYPE, REQ.V_DATE, REQ.V_SEQ) FROM [PDI].[func_gentransaction_id](@@MAX_TRANSACTION_ID, @@CODE_TYPE) AS REQ); 

		

	--		 CHECK ALL APPROVER 1
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_SH_DATE = NULL;
			END;
		
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;
		
	--		 CHECK ALL APPROVER 2
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_SH_DATE = NULL;
			END;
		
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;

	--		 CHECK ALL APPROVER 3 
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_SH_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;

	--		 CHECK ALL APPROVER 4
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_SH_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END; 
			


			
			SET @@COUNT_MATCH = (
				SELECT COUNT(*) FROM  PDI.TB_M_ROTATION_HISTORY B 
				WHERE B.CLASS=@@CLASS AND B.ORG_ID=@@ORG_ID AND B.VALID_FROM=''+@@VALID_FROM+'' AND B.VALID_TO=''+@@VALID_TO+'' AND POSITION_LEVEL=@@POSITION_LEVEL AND B.NOREG=@@NOREG
			);



			IF(@@APPROVAL = 'FALSE') 
			BEGIN 
				
				IF(@@COUNT_MATCH > 0) 
				BEGIN

				--
					UPDATE PDI.TB_M_ROTATION_HISTORY 
					SET 
						POSITION_ABBR = @@POSITION_ABBR, DIRECTORATE_ID = @@DIRECTORATE_ID, DIRECTORATE_NAME = @@DIRECTORATE_NAME, DIVISION_ID = @@DIVISION_ID, DIVISION_NAME = @@DIVISION_NAME,
						DEPARTMENT_ID = @@DEPARTMENT_ID, DEPARTMENT_NAME = @@DEPARTMENT_NAME, SECTION_ID = @@SECTION_ID, SECTION_NAME = @@SECTION_NAME, LINE_ID = @@LINE_ID, LINE_NAME = @@LINE_NAME,
						GROUP_ID = @@GROUP_ID, GROUP_NAME = @@GROUP_NAME, RESPONSIBILITY = @@RESPONSIBILITY, ACCOMPLISHMENT = @@ACCOMPLISHMENT, UPDATED_DT = GETDATE(), UPDATED_BY = @@NOREG 
					WHERE 
						NOREG = @@NOREG AND CLASS = @@CLASS AND ORG_ID = @@ORG_ID AND POSITION_LEVEL = @@POSITION_LEVEL AND VALID_FROM = @@VALID_FROM AND VALID_TO=@@VALID_TO; 
				
				--
				END ELSE
				BEGIN
					INSERT INTO PDI.TB_M_ROTATION_HISTORY 
					(POSITION_ABBR, DIRECTORATE_ID, DIRECTORATE_NAME, DIVISION_ID, DIVISION_NAME, DEPARTMENT_ID, DEPARTMENT_NAME, SECTION_ID, SECTION_NAME, LINE_ID, LINE_NAME, GROUP_ID,
					GROUP_NAME, RESPONSIBILITY, ACCOMPLISHMENT, NOREG, CLASS, ORG_ID, POSITION_LEVEL, VALID_FROM, VALID_TO, CREATED_DT, CREATED_BY)
					VALUES
					(
					@@POSITION_ABBR ,
					@@DIRECTORATE_ID ,
					@@DIRECTORATE_NAME ,
					@@DIVISION_ID ,
					@@DIVISION_NAME ,
					@@DEPARTMENT_ID ,
					@@DEPARTMENT_NAME ,
					@@SECTION_ID  ,
					@@SECTION_NAME ,
					@@LINE_ID ,
					@@LINE_NAME ,
					@@GROUP_ID , 
					@@GROUP_NAME ,
					@@RESPONSIBILITY ,
					@@ACCOMPLISHMENT ,
					@@NOREG ,
					@@CLASS ,
					@@ORG_ID ,
					@@POSITION_LEVEL ,
					@@VALID_FROM ,
					@@VALID_TO ,
					@@CREATED_DT,
					@@CREATED_BY
					); 
				END;
				--
			INSERT INTO 
				PDI.TB_R_SUBMISSION_ROTATION_HISTORY
			(
				TRANSACTION_ID
				, NOREG
				, CLASS
				, POSITION_LEVEL
				, POSITION_ABBR
				, DIRECTORATE_ID
				, DIRECTORATE_NAME
				, DIVISION_ID
				, DIVISION_NAME
				, DEPARTMENT_ID
				, DEPARTMENT_NAME
				, SECTION_ID
				, SECTION_NAME
				, LINE_ID
				, LINE_NAME
				, GROUP_ID
				, GROUP_NAME
				, RESPONSIBILITY
				, ACCOMPLISHMENT
				, VALID_FROM
				, VALID_TO
				, STATUS_CD
				, REJECT_REASON
				, APP_SH_NOREG
				, APP_SH_STATUS
				, APP_SH_DATE
				, APP_DPH_NOREG
				, APP_DPH_STATUS
				, APP_DPH_DATE
				, APP_DH_NOREG
				, APP_DH_STATUS
				, APP_DH_DATE
				, APP_DIR_NOREG
				, APP_DIR_STATUS
				, APP_DIR_DATE
				, APP_HR_ADMIN_NOREG
				, APP_HR_ADMIN_STATUS
				, APP_HR_ADMIN_DATE
				, CANCEL_FLAG
				, CANCEL_BY
				, CANCEL_DATE
				, REMARK_1
				, REMARK_2
				, CREATED_DT
				, CREATED_BY
				, UPDATED_DT
				, UPDATED_BY
				, ORG_ID
				, POSITION_PERCENT
			)
				VALUES 
			( 
				''+@@TRANSACTION_ID+'',
				''+@@NOREG+'',
				@@CLASS,
				@@POSITION_LEVEL,
				@@POSITION_ABBR,
				@@DIRECTORATE_ID,
				@@DIRECTORATE_NAME,
				@@DIVISION_ID,
				@@DIVISION_NAME,
				@@DEPARTMENT_ID,
				@@DEPARTMENT_NAME,
				@@SECTION_ID,
				@@SECTION_NAME,
				@@LINE_ID,
				@@LINE_NAME,
				@@GROUP_ID,
				@@GROUP_NAME,
				@@RESPONSIBILITY,
				@@ACCOMPLISHMENT,
				@@VALID_FROM,
				@@VALID_TO,
				99,
				@@REJECT_REASON,
				@@APP_SH_NOREG,
				@@APP_SH_STATUS,
				@@APP_SH_DATE,
				@@APP_DPH_NOREG,
				@@APP_DPH_STATUS,
				@@APP_DPH_DATE,
				@@APP_DH_NOREG,
				@@APP_DH_STATUS,
				@@APP_DH_DATE,
				@@APP_DIR_NOREG,
				@@APP_DIR_STATUS,
				@@APP_DIR_DATE,
				@@APP_HR_ADMIN_NOREG,
				@@APP_HR_ADMIN_STATUS,
				@@APP_HR_ADMIN_DATE,
				@@CANCEL_FLAG,
				@@CANCEL_BY,
				@@CANCEL_DATE,
				@@REMARK_1,
				@@REMARK_2,
				@@CREATED_DT,
				@@CREATED_BY,
				@@UPDATED_DT,
				@@UPDATED_BY ,
				@@ORG_ID,
				@@POSITION_PERCENT
			);
			END ELSE
			BEGIN
			INSERT INTO 
				PDI.TB_R_SUBMISSION_ROTATION_HISTORY
			(
				TRANSACTION_ID
				, NOREG
				, CLASS
				, POSITION_LEVEL
				, POSITION_ABBR
				, DIRECTORATE_ID
				, DIRECTORATE_NAME
				, DIVISION_ID
				, DIVISION_NAME
				, DEPARTMENT_ID
				, DEPARTMENT_NAME
				, SECTION_ID
				, SECTION_NAME
				, LINE_ID
				, LINE_NAME
				, GROUP_ID
				, GROUP_NAME
				, RESPONSIBILITY
				, ACCOMPLISHMENT
				, VALID_FROM
				, VALID_TO
				, STATUS_CD
				, REJECT_REASON
				, APP_SH_NOREG
				, APP_SH_STATUS
				, APP_SH_DATE
				, APP_DPH_NOREG
				, APP_DPH_STATUS
				, APP_DPH_DATE
				, APP_DH_NOREG
				, APP_DH_STATUS
				, APP_DH_DATE
				, APP_DIR_NOREG
				, APP_DIR_STATUS
				, APP_DIR_DATE
				, APP_HR_ADMIN_NOREG
				, APP_HR_ADMIN_STATUS
				, APP_HR_ADMIN_DATE
				, CANCEL_FLAG
				, CANCEL_BY
				, CANCEL_DATE
				, REMARK_1
				, REMARK_2
				, CREATED_DT
				, CREATED_BY
				, UPDATED_DT
				, UPDATED_BY
				, ORG_ID
				, POSITION_PERCENT
			)
				VALUES 
			( 
				''+@@TRANSACTION_ID+'',
				''+@@NOREG+'',
				@@CLASS,
				@@POSITION_LEVEL,
				@@POSITION_ABBR,
				@@DIRECTORATE_ID,
				@@DIRECTORATE_NAME,
				@@DIVISION_ID,
				@@DIVISION_NAME,
				@@DEPARTMENT_ID,
				@@DEPARTMENT_NAME,
				@@SECTION_ID,
				@@SECTION_NAME,
				@@LINE_ID,
				@@LINE_NAME,
				@@GROUP_ID,
				@@GROUP_NAME,
				@@RESPONSIBILITY,
				@@ACCOMPLISHMENT,
				@@VALID_FROM,
				@@VALID_TO,
				@@STATUS_CD,
				@@REJECT_REASON,
				@@APP_SH_NOREG,
				@@APP_SH_STATUS,
				@@APP_SH_DATE,
				@@APP_DPH_NOREG,
				@@APP_DPH_STATUS,
				@@APP_DPH_DATE,
				@@APP_DH_NOREG,
				@@APP_DH_STATUS,
				@@APP_DH_DATE,
				@@APP_DIR_NOREG,
				@@APP_DIR_STATUS,
				@@APP_DIR_DATE,
				@@APP_HR_ADMIN_NOREG,
				@@APP_HR_ADMIN_STATUS,
				@@APP_HR_ADMIN_DATE,
				@@CANCEL_FLAG,
				@@CANCEL_BY,
				@@CANCEL_DATE,
				@@REMARK_1,
				@@REMARK_2,
				@@CREATED_DT,
				@@CREATED_BY,
				@@UPDATED_DT,
				@@UPDATED_BY ,
				@@ORG_ID,
				@@POSITION_PERCENT
			);

			END;




		END;


		SET @@info = 'success';
		SET @@result = 200;
		SET @@messages = 'SUCCESS';
	END;
END TRY
BEGIN CATCH
	SET @@info = 'failed';
	SET @@result = 500;
	SET @@messages = @@VALID_TO+' '+ERROR_MESSAGE();  
END CATCH;




SELECT @@info AS msgInfo, @@result AS result, @@messages AS msg;