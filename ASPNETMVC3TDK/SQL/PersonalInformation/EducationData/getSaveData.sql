DECLARE @@info VARCHAR(MAX);
DECLARE @@result int;
DECLARE @@messages VARCHAR(MAX);

DECLARE @@NOREG VARCHAR(MAX) = @P_NOREG; 

DECLARE @@POSITION_LEVEL VARCHAR(MAX);  
DECLARE @@COUNT_MAP_RESULT_ONLY_HR INT;
DECLARE @@COUNT_MAP_RESULT_ALL INT; 

DECLARE @@TRANSACTION_ID NVARCHAR(MAX) = ''; 
DECLARE @@EDUCATION_CD NVARCHAR(MAX) = @P_EDUCATION_CD;
DECLARE @@MAJOR_CD NVARCHAR(MAX) = @P_MAJOR_CD;
DECLARE @@VALID_FROM NVARCHAR(MAX) = @P_VALID_FROM;
DECLARE @@VALID_TO NVARCHAR(MAX) = @P_VALID_TO;
DECLARE @@GPA NUMERIC(10, 2) = @P_GPA;
DECLARE @@SCHOOL_NAME NVARCHAR(MAX) = @P_SCHOOL_NAME;
DECLARE @@COUNTRY_ID NVARCHAR(MAX) = @P_COUNTRY_ID;


DECLARE @@CERTIFICATE_NAME VARCHAR(MAX);
-- = @P_CERTIFICATE_NAME;
DECLARE @@CERTIFICATE_PATH VARCHAR(MAX);
-- = @P_CERTIFICATE_PATH;
--

SET @@CERTIFICATE_NAME = 
    CASE 
        WHEN @P_CERTIFICATE_NAME = '' THEN NULL
        ELSE @P_CERTIFICATE_NAME
    END;

SET @@CERTIFICATE_PATH = 
    CASE 
        WHEN @P_CERTIFICATE_PATH = '' THEN NULL
        ELSE @P_CERTIFICATE_PATH
    END;



DECLARE @@REMARK_1 NVARCHAR(MAX) = @P_REMARK_1;
DECLARE @@STATUS_CD NVARCHAR(MAX) = '1';
DECLARE @@REJECT_REASON NVARCHAR(MAX) = NULL;
DECLARE @@APP_SH_NOREG VARCHAR(MAX);
DECLARE @@APP_SH_STATUS VARCHAR(MAX);
DECLARE @@APP_SH_DATE VARCHAR(MAX);
DECLARE @@APP_DPH_NOREG VARCHAR(MAX);
DECLARE @@APP_DPH_STATUS VARCHAR(MAX);
DECLARE @@APP_DPH_DATE VARCHAR(MAX);
DECLARE @@APP_DH_NOREG VARCHAR(MAX);
DECLARE @@APP_DH_STATUS VARCHAR(MAX);
DECLARE @@APP_DH_DATE VARCHAR(MAX);
DECLARE @@APP_DIR_NOREG VARCHAR(MAX);
DECLARE @@APP_DIR_STATUS VARCHAR(MAX);
DECLARE @@APP_DIR_DATE VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_NOREG VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_STATUS VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_DATE VARCHAR(MAX);
DECLARE @@CREATED_BY VARCHAR(MAX);
DECLARE @@CREATED_DT VARCHAR(MAX);
DECLARE @@UPDATED_BY VARCHAR(MAX) = @@NOREG;
DECLARE @@UPDATED_DT VARCHAR(MAX) = GETDATE();
	  
DECLARE @@MAX_TRANSACTION_ID VARCHAR(MAX);
 
DECLARE @@APPROVER_1 VARCHAR(MAX);
DECLARE @@APPROVER_2 VARCHAR(MAX);
DECLARE @@APPROVER_3 VARCHAR(MAX);
DECLARE @@APPROVER_4 VARCHAR(MAX);


DECLARE @@CODE_TYPE VARCHAR(MAX) = 'ED';
DECLARE @@APPROVAL VARCHAR(MAX);

DECLARE @@COUNT_MATCH INT;

 


BEGIN TRY	 
	BEGIN 

		SET @@APPROVAL = (
				SELECT SYSTEM_VALUE
				from DBO.TB_M_SYSTEM
				WHERE 
				FUNCTION_ID = 'ENVIRONMENT_PDI' 
				AND SYSTEM_CD = 'APPROVAL'		
		);

		SET @@STATUS_CD = (SELECT STATUS_CD FROM DBO.TB_M_APPROVAL_STATUS WHERE STATUS_DESC = 'DIAJUKAN');

		SELECT @@POSITION_LEVEL = B.POSITION_LEVEL 
		FROM DBO.TB_M_PROFILE_HEADER A 
		JOIN TB_M_ORG_POSITION B ON A.POSITION = B.POSITION_DESC  
		WHERE NOREG = @@NOREG;

		SELECT @@COUNT_MAP_RESULT_ONLY_HR = COUNT(*) 
		FROM PDI.TB_M_MAPPING_APPROVAL 
		WHERE cast(POSITION_LEVEL AS INT) = @@POSITION_LEVEL 
			AND APPROVER_1 IS NOT NULL AND APPROVER_2 IS NULL 
			AND APPROVER_3 IS NULL AND APPROVER_4 IS NULL;

		SELECT @@COUNT_MAP_RESULT_ALL = COUNT(*) 
		FROM PDI.TB_M_MAPPING_APPROVAL 
		WHERE POSITION_LEVEL = @@POSITION_LEVEL 
			AND APPROVER_1 IS NOT NULL   
			AND APPROVER_2 IS NOT NULL  
			AND APPROVER_3 IS NOT NULL  
			AND APPROVER_4 IS NULL; 

		IF @@COUNT_MAP_RESULT_ONLY_HR = 1
		BEGIN 	
			SET @@info = 'SUCCESS';
			SET @@result = 200;
			SET @@messages = 'success'; 
		END 

		ELSE
		BEGIN 
			SET @@MAX_TRANSACTION_ID = (SELECT MAX(TRANSACTION_ID) TRANSACTION_ID FROM PDI.TB_R_SUBMISSION_EDUCATION
				WHERE TRANSACTION_ID LIKE CONCAT(@@CODE_TYPE, FORMAT(GETDATE(), 'ddMMyy'), '%')  );
		
			SELECT 
				@@APPROVER_1 = APPROVER_1,
				@@APPROVER_2 = APPROVER_2,
				@@APPROVER_3 = APPROVER_3,
				@@APPROVER_4 = APPROVER_4
			FROM PDI.TB_M_MAPPING_APPROVAL 
			WHERE POSITION_LEVEL = @@POSITION_LEVEL 
				AND APPROVER_1 IS NOT NULL   
				AND APPROVER_2 IS NOT NULL  
				AND APPROVER_3 IS NOT NULL  
				AND APPROVER_4 IS NULL;
			
			/*
			EXEC [PDI].[sp_extract_transactionid] @@MAX_TRANSACTION_ID, @@CODE_TYPE;  
			SET @@TRANSACTION_ID = (SELECT CONCAT(V_TYPE, V_DATE, V_SEQ) FROM ##RESULT_TEMP_EXSTRACT_TRANSACTION); 
			EXEC [PDI].[sp_GetSuperiors_NEW] @@NOREG;
			*/

			SET @@TRANSACTION_ID = (SELECT CONCAT(REQ.V_TYPE, REQ.V_DATE, REQ.V_SEQ) FROM [PDI].[func_gentransaction_id](@@MAX_TRANSACTION_ID, @@CODE_TYPE) AS REQ); 

	--		 CHECK ALL APPROVER 1
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_SH_DATE = NULL;
			END;
		
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;
		
	--		 CHECK ALL APPROVER 2
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_SH_DATE = NULL;
			END;
		
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;

	--		 CHECK ALL APPROVER 3 
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_SH_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;

	--		 CHECK ALL APPROVER 4
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_SH_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END; 

			--
			SET @@CREATED_BY = @@NOREG;
			SET @@CREATED_DT = GETDATE();
		
			
			SET @@COUNT_MATCH = (
				SELECT COUNT(*) FROM PDI.TB_M_PROFILE_EDUCATION 
				WHERE NOREG=@@NOREG AND EDUCATION_CD =@@EDUCATION_CD AND MAJOR_CD=@@MAJOR_CD  
			); 


			IF(@@APPROVAL = 'FALSE') 
			BEGIN
				
				
				--
				IF(@@COUNT_MATCH > 0) 
				BEGIN  
					SET @@info = 'falied';
					SET @@result = 500;
					SET @@messages = 'data already exists !';

				END ELSE  
				BEGIN
				
				--
					IF(@@CERTIFICATE_NAME IS NULL AND @@CERTIFICATE_PATH IS NULL) 
					BEGIN
						UPDATE PDI.TB_M_PROFILE_EDUCATION SET VALID_TO=@@VALID_TO, GPA=@@GPA, SCHOOL_NAME=@@SCHOOL_NAME, COUNTRY_ID=@@COUNTRY_ID, 
							REMARK_1=@@REMARK_1, UPDATED_DT=@@UPDATED_DT, UPDATED_BY=@@UPDATED_BY
							WHERE 
							NOREG=@@NOREG AND EDUCATION_CD=@@EDUCATION_CD AND MAJOR_CD=@@MAJOR_CD AND VALID_FROM=@@VALID_FROM AND VALID_TO=@@VALID_TO; 
					END 
					ELSE
					BEGIN 
						UPDATE PDI.TB_M_PROFILE_EDUCATION SET VALID_TO=@@VALID_TO, GPA=@@GPA, SCHOOL_NAME=@@SCHOOL_NAME, COUNTRY_ID=@@COUNTRY_ID, 
							CERTIFICATE_NAME=@@CERTIFICATE_NAME, CERTIFICATE_PATH=@@CERTIFICATE_PATH, REMARK_1=@@REMARK_1, UPDATED_DT=@@UPDATED_DT, UPDATED_BY=@@UPDATED_BY
							WHERE 
							NOREG=@@NOREG AND EDUCATION_CD=@@EDUCATION_CD AND MAJOR_CD=@@MAJOR_CD AND VALID_FROM=@@VALID_FROM AND VALID_TO=@@VALID_TO;
					END;  
						
						INSERT INTO PDI.TB_M_PROFILE_EDUCATION
						( NOREG, EDUCATION_CD ,MAJOR_CD ,VALID_FROM ,VALID_TO , GPA ,SCHOOL_NAME ,CERTIFICATE_NAME ,CERTIFICATE_PATH ,COUNTRY_ID ,REMARK_1 , CREATED_DT ,CREATED_BY )
						values
						( @@NOREG , @@EDUCATION_CD  ,@@MAJOR_CD ,@@VALID_FROM ,@@VALID_TO ,@@GPA , @@SCHOOL_NAME ,@@CERTIFICATE_NAME ,@@CERTIFICATE_PATH ,@@COUNTRY_ID ,@@REMARK_1  
						, @@CREATED_DT ,@@CREATED_BY );


						INSERT INTO  PDI.TB_R_SUBMISSION_EDUCATION
						( 
						  TRANSACTION_ID, NOREG, EDUCATION_CD, MAJOR_CD, VALID_FROM, VALID_TO, GPA, SCHOOL_NAME, CERTIFICATE_NAME, CERTIFICATE_PATH, COUNTRY_ID, STATUS_CD 
						  , REJECT_REASON, REMARK_1, APP_SH_NOREG, APP_SH_STATUS, APP_SH_DATE, APP_DPH_NOREG, APP_DPH_STATUS, APP_DPH_DATE, APP_DH_NOREG, APP_DH_STATUS
						  , APP_DH_DATE, APP_DIR_NOREG, APP_DIR_STATUS, APP_DIR_DATE, APP_HR_ADMIN_NOREG, APP_HR_ADMIN_STATUS, APP_HR_ADMIN_DATE, CREATED_BY, CREATED_DT
						)
						VALUES
						( LTRIM(RTRIM(@@TRANSACTION_ID)) +'', ''+LTRIM(RTRIM(@@NOREG))+'', ''+LTRIM(RTRIM(@@EDUCATION_CD))+'', LTRIM(RTRIM(@@MAJOR_CD)), @@VALID_FROM, @@VALID_TO, @@GPA, @@SCHOOL_NAME, @@CERTIFICATE_NAME
						  , @@CERTIFICATE_PATH, @@COUNTRY_ID, '99', @@REJECT_REASON, @@REMARK_1, @@APP_SH_NOREG, @@APP_SH_STATUS, @@APP_SH_DATE, @@APP_DPH_NOREG, @@APP_DPH_STATUS, @@APP_DPH_DATE
						  , @@APP_DH_NOREG, @@APP_DH_STATUS, @@APP_DH_DATE, @@APP_DIR_NOREG, @@APP_DIR_STATUS, @@APP_DIR_DATE, @@APP_HR_ADMIN_NOREG, @@APP_HR_ADMIN_STATUS, @@APP_HR_ADMIN_DATE
						  , @@CREATED_BY, CURRENT_TIMESTAMP 
						);
			
					
				
					SET @@info = 'success';
					SET @@result = 200;
					SET @@messages = 'success';
					--
				END;
			--
			END ELSE
			BEGIN 
				
				INSERT INTO  PDI.TB_R_SUBMISSION_EDUCATION
				( 
					TRANSACTION_ID, NOREG, EDUCATION_CD, MAJOR_CD, VALID_FROM, VALID_TO, GPA, SCHOOL_NAME, CERTIFICATE_NAME, CERTIFICATE_PATH, COUNTRY_ID, STATUS_CD 
					, REJECT_REASON, REMARK_1, APP_SH_NOREG, APP_SH_STATUS, APP_SH_DATE, APP_DPH_NOREG, APP_DPH_STATUS, APP_DPH_DATE, APP_DH_NOREG, APP_DH_STATUS
					, APP_DH_DATE, APP_DIR_NOREG, APP_DIR_STATUS, APP_DIR_DATE, APP_HR_ADMIN_NOREG, APP_HR_ADMIN_STATUS, APP_HR_ADMIN_DATE, CREATED_BY, CREATED_DT
				)
				VALUES
				( LTRIM(RTRIM(@@TRANSACTION_ID)) +'', ''+LTRIM(RTRIM(@@NOREG))+'', ''+LTRIM(RTRIM(@@EDUCATION_CD))+'', LTRIM(RTRIM(@@MAJOR_CD)), @@VALID_FROM, @@VALID_TO, @@GPA, @@SCHOOL_NAME, @@CERTIFICATE_NAME
				  , @@CERTIFICATE_PATH, @@COUNTRY_ID, '1', @@REJECT_REASON, @@REMARK_1, @@APP_SH_NOREG, @@APP_SH_STATUS, @@APP_SH_DATE, @@APP_DPH_NOREG, @@APP_DPH_STATUS, @@APP_DPH_DATE
				  , @@APP_DH_NOREG, @@APP_DH_STATUS, @@APP_DH_DATE, @@APP_DIR_NOREG, @@APP_DIR_STATUS, @@APP_DIR_DATE, @@APP_HR_ADMIN_NOREG, @@APP_HR_ADMIN_STATUS, @@APP_HR_ADMIN_DATE
				  , @@CREATED_BY, CURRENT_TIMESTAMP 
				);
				
				SET @@info = 'success';
				SET @@result = 200;
				SET @@messages = 'success';

			END;
			
			
			


		END;
	END; 
END TRY

BEGIN CATCH
	SET @@info = 'failed';
	SET @@result = 500;
	SET @@messages = ERROR_MESSAGE(); -- You can specify the error message here.
END CATCH;

SELECT @@info AS msgInfo, @@result AS result, @@messages AS msg;