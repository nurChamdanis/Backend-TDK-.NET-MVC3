DECLARE @@info VARCHAR(MAX);
DECLARE @@result int;
DECLARE @@messages VARCHAR(MAX);

DECLARE @@NOREG VARCHAR(MAX) = @P_NOREG; 

DECLARE @@TRANSACTION_ID VARCHAR(MAX) = @P_TRANSACTION_ID; 
DECLARE @@LANGUAGE_ID VARCHAR(MAX) = @P_LANGUAGE_ID; 
DECLARE @@SKILL_LEVEL VARCHAR(MAX) = @P_SKILL_LEVEL ; 
DECLARE @@SCORE VARCHAR(MAX) = @P_SCORE; 


DECLARE @@CERTIFICATE_NAME VARCHAR(MAX);
-- = @P_CERTIFICATE_NAME;
DECLARE @@CERTIFICATE_PATH VARCHAR(MAX);
-- = @P_CERTIFICATE_PATH;
--

SET @@CERTIFICATE_NAME = 
    CASE 
        WHEN NULLIF(@P_CERTIFICATE_NAME, '') IS NULL THEN NULL
        ELSE @P_CERTIFICATE_NAME
    END;

SET @@CERTIFICATE_PATH = 
    CASE 
        WHEN NULLIF(@P_CERTIFICATE_PATH, '') IS NULL THEN NULL
        ELSE @P_CERTIFICATE_PATH
    END;



DECLARE @@VALID_TO VARCHAR(MAX) = @P_VALID_TO; 
DECLARE @@LANGUAGE_TEST VARCHAR(MAX) = @P_LANGUAGE_TEST; 
DECLARE @@REMARK_1 VARCHAR(MAX) = @P_REMARK_1; 
DECLARE @@REMARK_2 VARCHAR(MAX) = @P_REMARK_2; 
DECLARE @@CANCEL_FLAG VARCHAR(MAX) = 1;
DECLARE @@CANCEL_BY VARCHAR(MAX) = @@NOREG;
DECLARE @@CANCEL_DATE VARCHAR(MAX) = CURRENT_TIMESTAMP;
DECLARE @@UPDATED_DT VARCHAR(MAX) = CURRENT_TIMESTAMP;
DECLARE @@UPDATED_BY VARCHAR(MAX) = @@NOREG;

 
DECLARE @@POSITION_LEVEL VARCHAR(MAX);  
DECLARE @@COUNT_MAP_RESULT_ONLY_HR INT;
DECLARE @@COUNT_MAP_RESULT_ALL INT; 


DECLARE @@STATUS_CD NVARCHAR(MAX);
DECLARE @@REJECT_REASON NVARCHAR(MAX) = NULL;
DECLARE @@APP_SH_NOREG VARCHAR(MAX);
DECLARE @@APP_SH_STATUS VARCHAR(MAX);
DECLARE @@APP_SH_DATE VARCHAR(MAX);
DECLARE @@APP_DPH_NOREG VARCHAR(MAX);
DECLARE @@APP_DPH_STATUS VARCHAR(MAX);
DECLARE @@APP_DPH_DATE VARCHAR(MAX);
DECLARE @@APP_DH_NOREG VARCHAR(MAX);
DECLARE @@APP_DH_STATUS VARCHAR(MAX);
DECLARE @@APP_DH_DATE VARCHAR(MAX);
DECLARE @@APP_DIR_NOREG VARCHAR(MAX);
DECLARE @@APP_DIR_STATUS VARCHAR(MAX);
DECLARE @@APP_DIR_DATE VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_NOREG VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_STATUS VARCHAR(MAX);
DECLARE @@APP_HR_ADMIN_DATE VARCHAR(MAX); 
DECLARE @@CREATED_BY VARCHAR(MAX) = @@NOREG;
DECLARE @@CREATED_DT VARCHAR(MAX) = CURRENT_TIMESTAMP;

DECLARE @@MAX_TRANSACTION_ID VARCHAR(MAX);
 
DECLARE @@APPROVER_1 VARCHAR(MAX);
DECLARE @@APPROVER_2 VARCHAR(MAX);
DECLARE @@APPROVER_3 VARCHAR(MAX);
DECLARE @@APPROVER_4 VARCHAR(MAX);


DECLARE @@APPROVAL VARCHAR(MAX);
DECLARE @@COUNT_MATCH INT;

DECLARE @@CODE_TYPE VARCHAR(MAX) = 'LN';


DECLARE @@RESQ VARCHAR(MAX)
DECLARE @@PK_LANGUAGE_TEST VARCHAR(MAX) = @P_PK_LANGUAGE_TEST;


BEGIN TRY
	BEGIN


		
		IF @@TRANSACTION_ID IS NOT NULL BEGIN		
		-- CHANGE STATUS FLAG CANCEL TRUE (1)
		UPDATE 
			PDI.TB_R_SUBMISSION_LANGUAGE
			SET 
			CANCEL_FLAG = @@CANCEL_FLAG
			, CANCEL_BY = @@CREATED_BY
			, CANCEL_DATE = @@CREATED_DT
			, UPDATED_DT = @@UPDATED_DT
			, UPDATED_BY = @@UPDATED_BY
		WHERE TRANSACTION_ID=''+@@TRANSACTION_ID+'' ;
		END;

		--- INSERT NEW REQ

		SET @@STATUS_CD = (SELECT STATUS_CD FROM DBO.TB_M_APPROVAL_STATUS WHERE STATUS_DESC = 'DIAJUKAN');

		SELECT @@POSITION_LEVEL = B.POSITION_LEVEL 
		FROM DBO.TB_M_PROFILE_HEADER A 
		JOIN TB_M_ORG_POSITION B ON A.POSITION = B.POSITION_DESC  
		WHERE NOREG = @@NOREG;

		SELECT @@COUNT_MAP_RESULT_ONLY_HR = COUNT(*) 
		FROM PDI.TB_M_MAPPING_APPROVAL 
		WHERE cast(POSITION_LEVEL AS INT) = @@POSITION_LEVEL 
			AND APPROVER_1 IS NOT NULL AND APPROVER_2 IS NULL 
			AND APPROVER_3 IS NULL AND APPROVER_4 IS NULL;

		SELECT @@COUNT_MAP_RESULT_ALL = COUNT(*) 
		FROM PDI.TB_M_MAPPING_APPROVAL 
		WHERE POSITION_LEVEL = @@POSITION_LEVEL 
			AND APPROVER_1 IS NOT NULL   
			AND APPROVER_2 IS NOT NULL  
			AND APPROVER_3 IS NOT NULL  
			AND APPROVER_4 IS NULL; 

			 

		SET @@APPROVAL = (
				SELECT SYSTEM_VALUE
				from DBO.TB_M_SYSTEM
				WHERE 
				FUNCTION_ID = 'ENVIRONMENT_PDI' 
				AND SYSTEM_CD = 'APPROVAL'		
			);




		--
		IF @@COUNT_MAP_RESULT_ONLY_HR = 1
		BEGIN 	
			SET @@info = 'SUCCESS';
			SET @@result = 200;
			SET @@messages = 'success'; 
		END 

		--
		ELSE
		BEGIN 
			SET @@MAX_TRANSACTION_ID = (SELECT MAX(TRANSACTION_ID) TRANSACTION_ID FROM PDI.TB_R_SUBMISSION_LANGUAGE
				WHERE TRANSACTION_ID LIKE CONCAT(@@CODE_TYPE, FORMAT(GETDATE(), 'ddMMyy'), '%')  );
			
			--SELECT @@MAX_TRANSACTION_ID;
			
			SELECT 
				@@APPROVER_1 = APPROVER_1,
				@@APPROVER_2 = APPROVER_2,
				@@APPROVER_3 = APPROVER_3,
				@@APPROVER_4 = APPROVER_4
			FROM PDI.TB_M_MAPPING_APPROVAL 
			WHERE POSITION_LEVEL = @@POSITION_LEVEL 
				AND APPROVER_1 IS NOT NULL   
				AND APPROVER_2 IS NOT NULL  
				AND APPROVER_3 IS NOT NULL  
				AND APPROVER_4 IS NULL;

			/*
			EXEC [PDI].[sp_extract_transactionid] @@MAX_TRANSACTION_ID, @@CODE_TYPE;  
			SET @@TRANSACTION_ID = (SELECT CONCAT(V_TYPE, V_DATE, V_SEQ) FROM ##RESULT_TEMP_EXSTRACT_TRANSACTION);  
			EXEC [PDI].[sp_GetSuperiors_NEW] @@NOREG;
			*/
			
			SET @@TRANSACTION_ID = (SELECT CONCAT(REQ.V_TYPE, REQ.V_DATE, REQ.V_SEQ) FROM [PDI].[func_gentransaction_id](@@MAX_TRANSACTION_ID, @@CODE_TYPE) AS REQ); 
	


	--		 CHECK ALL APPROVER 1
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_SH_DATE = NULL;
			END;
		
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_1 IS NOT NULL AND @@APPROVER_1 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 1 END)
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;
		
	--		 CHECK ALL APPROVER 2
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_SH_DATE = NULL;
			END;
		
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_2 IS NOT NULL AND @@APPROVER_2 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;

	--		 CHECK ALL APPROVER 3 
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_SH_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);   
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				); 
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_3 IS NOT NULL AND @@APPROVER_3 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;

	--		 CHECK ALL APPROVER 4
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'SH'
			BEGIN  
				SET @@APP_SH_NOREG = (SELECT NSH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_SH_STATUS	= 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_SH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_SH_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DPH'
			BEGIN  
				SET @@APP_DPH_NOREG = (SELECT NDPH FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DPH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DPH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DPH_DATE = NULL;
			END;
	 
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DH'
			BEGIN 
				SET @@APP_DH_NOREG = (SELECT NDH FROM [PDI].[func_GetSuperiors_new](@@NOREG));	
				SET @@APP_DH_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DH_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DH_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'DIR'
			BEGIN 
				SET @@APP_DIR_NOREG = (SELECT NDIR FROM [PDI].[func_GetSuperiors_new](@@NOREG));
				SET @@APP_DIR_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_DIR_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_DIR_DATE = NULL;
			END;
	
			IF @@APPROVER_4 IS NOT NULL AND @@APPROVER_4 = 'HR'
			BEGIN 
				SET @@APP_HR_ADMIN_NOREG = (SELECT NOREG FROM PDI.TB_M_USER_HR_APPROVAL WHERE TRANSACTION_TYPE=@@CODE_TYPE );
				SET @@APP_HR_ADMIN_STATUS = 
				(CASE 
					WHEN @@APPROVAL = 'TRUE' THEN NULL
					ELSE (CASE WHEN @@APP_HR_ADMIN_NOREG IS NULL THEN NULL ELSE 3 END)
					END
				);  
				SET @@APP_HR_ADMIN_DATE = NULL;
			END;  






			SET @@COUNT_MATCH = (
				SELECT COUNT(*) FROM PDI.TB_M_PROFILE_LANGUAGE B 
				WHERE B.NOREG=''+@@NOREG+'' AND B.LANGUAGE_ID=''+@@LANGUAGE_ID+'' AND B.LANGUAGE_TEST=''+@@LANGUAGE_TEST+''
			);



			
			
			IF(@@APPROVAL = 'FALSE') -- APROVAL FALSE
			BEGIN   

				-- MATCH 1 ROW
				IF(@@COUNT_MATCH > 0 AND @@LANGUAGE_TEST != @@PK_LANGUAGE_TEST) 
				BEGIN
					--
					SET @@info = 'failed';
					SET @@result = 500;
					SET @@messages = 'this data already !';

				END ELSE
				BEGIN   
					  

					-- 
					IF(@@CERTIFICATE_NAME IS NULL AND @@CERTIFICATE_PATH IS NOT NULL) 
					BEGIN
					 
						--
						UPDATE PDI.TB_M_PROFILE_LANGUAGE
						SET
							SKILL_LEVEL = @@SKILL_LEVEL, SCORE = @@SCORE, LANGUAGE_TEST = @@LANGUAGE_TEST
							, VALID_TO = @@VALID_TO, REMARK_1 = @@REMARK_1, CREATED_DT = @@CREATED_DT, CREATED_BY = @@CREATED_BY 
							, UPDATED_DT = @@UPDATED_DT
							, UPDATED_BY = @@UPDATED_BY 
						WHERE LANGUAGE_ID = @@LANGUAGE_ID AND NOREG = @@NOREG AND LANGUAGE_TEST=@@PK_LANGUAGE_TEST;
						--

					END ELSE
					BEGIN 
					
						--
						UPDATE PDI.TB_M_PROFILE_LANGUAGE
							SET
								SKILL_LEVEL = @@SKILL_LEVEL, SCORE = @@SCORE, LANGUAGE_TEST = @@LANGUAGE_TEST, CERTIFICATE_NAME = @@CERTIFICATE_NAME
								, CERTIFICATE_PATH = @@CERTIFICATE_PATH, VALID_TO = @@VALID_TO, REMARK_1 = @@REMARK_1, CREATED_DT = @@CREATED_DT, CREATED_BY = @@CREATED_BY 
								, UPDATED_DT = @@UPDATED_DT
								, UPDATED_BY = @@UPDATED_BY 
							WHERE LANGUAGE_ID = @@LANGUAGE_ID AND NOREG = @@NOREG  AND LANGUAGE_TEST=@@PK_LANGUAGE_TEST;

					END;
					
					-- 
					--
					INSERT INTO PDI.TB_R_SUBMISSION_LANGUAGE
					( TRANSACTION_ID, NOREG, LANGUAGE_ID, SKILL_LEVEL, SCORE, LANGUAGE_TEST, CERTIFICATE_NAME, CERTIFICATE_PATH, VALID_TO, STATUS_CD, REJECT_REASON,
					APP_SH_NOREG, APP_SH_STATUS, APP_SH_DATE, APP_DPH_NOREG, APP_DPH_STATUS, APP_DPH_DATE, APP_DH_NOREG, APP_DH_STATUS, APP_DH_DATE, APP_DIR_NOREG, APP_DIR_STATUS,
					APP_DIR_DATE, APP_HR_ADMIN_NOREG, APP_HR_ADMIN_STATUS, APP_HR_ADMIN_DATE, REMARK_1, REMARK_2, CREATED_DT, CREATED_BY )
					VALUES
					( @@TRANSACTION_ID, @@NOREG, @@LANGUAGE_ID, @@SKILL_LEVEL, @@SCORE, @@LANGUAGE_TEST, @@CERTIFICATE_NAME, @@CERTIFICATE_PATH, @@VALID_TO, '99', @@REJECT_REASON,
					@@APP_SH_NOREG, @@APP_SH_STATUS, @@APP_SH_DATE, @@APP_DPH_NOREG, @@APP_DPH_STATUS, @@APP_DPH_DATE, @@APP_DH_NOREG, @@APP_DH_STATUS, @@APP_DH_DATE, @@APP_DIR_NOREG, @@APP_DIR_STATUS,
					@@APP_DIR_DATE, @@APP_HR_ADMIN_NOREG, @@APP_HR_ADMIN_STATUS, @@APP_HR_ADMIN_DATE, @@REMARK_1, null, @@CREATED_DT, @@CREATED_BY );
					--
					 
					--
					SET @@info = 'SUCCESS';
					SET @@result = 200;
					SET @@messages = 'Success !';
					-- 
				END;   
			
			END ELSE
			BEGIN

			--
				INSERT PDI.TB_M_PROFILE_LANGUAGE 
				(SKILL_LEVEL, SCORE, LANGUAGE_TEST, CERTIFICATE_NAME, CERTIFICATE_PATH, VALID_TO, REMARK_1, CREATED_DT, CREATED_BY, NOREG, LANGUAGE_ID )
				VALUES 
				(@@SKILL_LEVEL, @@SCORE ,@@LANGUAGE_TEST ,@@CERTIFICATE_NAME ,@@CERTIFICATE_PATH, @@VALID_TO ,@@REMARK_1, @@CREATED_DT , @@CREATED_BY, @@NOREG, @@LANGUAGE_ID);


					--
					


			--
				INSERT INTO PDI.TB_R_SUBMISSION_LANGUAGE
				( TRANSACTION_ID, NOREG, LANGUAGE_ID, SKILL_LEVEL, SCORE, LANGUAGE_TEST, CERTIFICATE_NAME, CERTIFICATE_PATH, VALID_TO, STATUS_CD, REJECT_REASON,
				APP_SH_NOREG, APP_SH_STATUS, APP_SH_DATE, APP_DPH_NOREG, APP_DPH_STATUS, APP_DPH_DATE, APP_DH_NOREG, APP_DH_STATUS, APP_DH_DATE, APP_DIR_NOREG, APP_DIR_STATUS,
				APP_DIR_DATE, APP_HR_ADMIN_NOREG, APP_HR_ADMIN_STATUS, APP_HR_ADMIN_DATE, REMARK_1, REMARK_2, CREATED_DT, CREATED_BY )
				VALUES
				( @@TRANSACTION_ID, @@NOREG, @@LANGUAGE_ID, @@SKILL_LEVEL, @@SCORE, @@LANGUAGE_TEST, @@CERTIFICATE_NAME, @@CERTIFICATE_PATH, @@VALID_TO, '1', @@REJECT_REASON,
				@@APP_SH_NOREG, @@APP_SH_STATUS, @@APP_SH_DATE, @@APP_DPH_NOREG, @@APP_DPH_STATUS, @@APP_DPH_DATE, @@APP_DH_NOREG, @@APP_DH_STATUS, @@APP_DH_DATE, @@APP_DIR_NOREG, @@APP_DIR_STATUS,
				@@APP_DIR_DATE, @@APP_HR_ADMIN_NOREG, @@APP_HR_ADMIN_STATUS, @@APP_HR_ADMIN_DATE, @@REMARK_1, null, @@CREATED_DT, @@CREATED_BY )
			--
			 
				SET @@info = 'success';
				SET @@result = 200;
				SET @@messages = 'SUCCESS';
			--
			END;
			 
		END;
			
	END;
END TRY
BEGIN CATCH

	----------
	SET @@info = 'failed';
	SET @@result = 500;
	SET @@messages = ERROR_MESSAGE(); 
	------------


END CATCH;



SELECT @@info AS msgInfo, @@result AS result, @@messages AS msg;